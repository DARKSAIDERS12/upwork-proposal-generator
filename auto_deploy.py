#!/usr/bin/env python3
"""
–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏–µ –Ω–∞ Render.com —á–µ—Ä–µ–∑ GitHub
"""

import requests
import json
import time
import os
from datetime import datetime

def create_render_service():
    """–°–æ–∑–¥–∞–Ω–∏–µ —Å–µ—Ä–≤–∏—Å–∞ –Ω–∞ Render.com"""
    
    print("üöÄ –°–æ–∑–¥–∞–Ω–∏–µ —Å–µ—Ä–≤–∏—Å–∞ –Ω–∞ Render.com...")
    
    # –î–∞–Ω–Ω—ã–µ –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è —Å–µ—Ä–≤–∏—Å–∞
    service_data = {
        "name": "upwork-auth-server",
        "type": "web_service",
        "env": "python",
        "buildCommand": "pip install -r requirements.txt",
        "startCommand": "python auth_server.py",
        "sourceDir": "backend",
        "autoDeploy": True,
        "healthCheckPath": "/api/user"
    }
    
    print("üìã –ù–∞—Å—Ç—Ä–æ–π–∫–∏ —Å–µ—Ä–≤–∏—Å–∞:")
    for key, value in service_data.items():
        print(f"   {key}: {value}")
    
    print("\n‚ö†Ô∏è  –í–ê–ñ–ù–û: –≠—Ç–æ—Ç —Å–∫—Ä–∏–ø—Ç –Ω–µ –º–æ–∂–µ—Ç –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —Å–æ–∑–¥–∞—Ç—å —Å–µ—Ä–≤–∏—Å –Ω–∞ Render.com")
    print("   –í–∞–º –Ω—É–∂–Ω–æ —Å–¥–µ–ª–∞—Ç—å —ç—Ç–æ –≤—Ä—É—á–Ω—É—é:")
    print("\nüìã –ü–æ—à–∞–≥–æ–≤–∞—è –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è:")
    print("1. –ü–µ—Ä–µ–π–¥–∏—Ç–µ –Ω–∞ https://render.com")
    print("2. –°–æ–∑–¥–∞–π—Ç–µ –∞–∫–∫–∞—É–Ω—Ç –∏ –≤–æ–π–¥–∏—Ç–µ")
    print("3. –ù–∞–∂–º–∏—Ç–µ 'New +' ‚Üí 'Web Service'")
    print("4. –ü–æ–¥–∫–ª—é—á–∏—Ç–µ GitHub —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π:")
    print("   - –í—ã–±–µ—Ä–∏—Ç–µ: DARKSAIDERS12/upwork-proposal-generator")
    print("   - –í–µ—Ç–∫–∞: main")
    print("5. –ù–∞—Å—Ç—Ä–æ–π—Ç–µ —Å–µ—Ä–≤–∏—Å:")
    print("   - Name: upwork-auth-server")
    print("   - Environment: Python")
    print("   - Build Command: pip install -r requirements.txt")
    print("   - Start Command: python auth_server.py")
    print("   - Source Directory: backend")
    print("6. –ù–∞–∂–º–∏—Ç–µ 'Create Web Service'")
    print("7. –î–æ–∂–¥–∏—Ç–µ—Å—å —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏—è (2-5 –º–∏–Ω—É—Ç)")
    print("8. –°–∫–æ–ø–∏—Ä—É–π—Ç–µ URL (–Ω–∞–ø—Ä–∏–º–µ—Ä: https://upwork-auth-server.onrender.com)")
    
    return None

def update_frontend_with_url(render_url):
    """–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥–∞ —Å –Ω–æ–≤—ã–º URL"""
    
    if not render_url:
        print("\n‚ùå URL –Ω–µ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω. –ü—Ä–æ–ø—É—Å–∫–∞–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥–∞.")
        return False
    
    print(f"\nüîß –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥–∞ —Å URL: {render_url}")
    
    # –ß–∏—Ç–∞–µ–º app.js
    app_js_path = "app.js"
    try:
        with open(app_js_path, 'r', encoding='utf-8') as f:
            content = f.read()
        
        # –ó–∞–º–µ–Ω—è–µ–º URL
        old_url = "http://localhost:5000/api"
        new_url = f"{render_url}/api"
        
        if old_url in content:
            content = content.replace(old_url, new_url)
            
            # –ó–∞–ø–∏—Å—ã–≤–∞–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–π —Ñ–∞–π–ª
            with open(app_js_path, 'w', encoding='utf-8') as f:
                f.write(content)
            
            print(f"‚úÖ URL –æ–±–Ω–æ–≤–ª–µ–Ω: {old_url} ‚Üí {new_url}")
            return True
        else:
            print("‚ö†Ô∏è  –°—Ç–∞—Ä—ã–π URL –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ app.js")
            return False
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è app.js: {e}")
        return False

def deploy_to_github_pages():
    """–ó–∞–≥—Ä—É–∑–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–Ω–æ–≥–æ –∫–æ–¥–∞ –Ω–∞ GitHub Pages"""
    
    print("\nüì§ –ó–∞–≥—Ä—É–∑–∫–∞ –Ω–∞ GitHub Pages...")
    
    try:
        # –î–æ–±–∞–≤–ª—è–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏—è
        os.system("git add .")
        
        # –ö–æ–º–º–∏—Ç–∏–º
        commit_msg = f"Update API URL for cloud deployment - {datetime.now().strftime('%Y-%m-%d %H:%M:%S')}"
        os.system(f'git commit -m "{commit_msg}"')
        
        # –ü—É—à–∏–º
        os.system("git push origin main")
        
        print("‚úÖ –ö–æ–¥ –∑–∞–≥—Ä—É–∂–µ–Ω –Ω–∞ GitHub Pages")
        print("üîÑ GitHub Pages –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –æ–±–Ω–æ–≤–∏—Ç—Å—è —á–µ—Ä–µ–∑ –Ω–µ—Å–∫–æ–ª—å–∫–æ –º–∏–Ω—É—Ç")
        return True
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –Ω–∞ GitHub: {e}")
        return False

def test_deployment(render_url):
    """–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ä–∞–∑–≤–µ—Ä–Ω—É—Ç–æ–≥–æ —Å–µ—Ä–≤–µ—Ä–∞"""
    
    if not render_url:
        print("\n‚ùå URL –Ω–µ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω. –ü—Ä–æ–ø—É—Å–∫–∞–µ–º —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ.")
        return False
    
    print(f"\nüß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–µ—Ä–≤–µ—Ä–∞: {render_url}")
    
    try:
        # –¢–µ—Å—Ç —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏
        test_data = {
            "email": f"test_{int(time.time())}@example.com",
            "password": "test123"
        }
        
        response = requests.post(f"{render_url}/api/register", json=test_data, timeout=30)
        
        if response.status_code == 201:
            print("‚úÖ –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è —Ä–∞–±–æ—Ç–∞–µ—Ç")
            
            # –¢–µ—Å—Ç –≤—Ö–æ–¥–∞
            login_response = requests.post(f"{render_url}/api/login", json=test_data, timeout=30)
            
            if login_response.status_code == 200:
                print("‚úÖ –í—Ö–æ–¥ —Ä–∞–±–æ—Ç–∞–µ—Ç")
                
                # –ü–æ–ª—É—á–∞–µ–º —Ç–æ–∫–µ–Ω
                login_data = login_response.json()
                token = login_data.get('session_token')
                
                if token:
                    # –¢–µ—Å—Ç –ø–æ–ª—É—á–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
                    headers = {"Authorization": f"Bearer {token}"}
                    user_response = requests.get(f"{render_url}/api/user", headers=headers, timeout=30)
                    
                    if user_response.status_code == 200:
                        print("‚úÖ –ü–æ–ª—É—á–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Ä–∞–±–æ—Ç–∞–µ—Ç")
                        print("üéâ –í—Å–µ —Ç–µ—Å—Ç—ã –ø—Ä–æ–π–¥–µ–Ω—ã —É—Å–ø–µ—à–Ω–æ!")
                        return True
                    else:
                        print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: {user_response.status_code}")
                else:
                    print("‚ùå –¢–æ–∫–µ–Ω –Ω–µ –ø–æ–ª—É—á–µ–Ω")
            else:
                print(f"‚ùå –û—à–∏–±–∫–∞ –≤—Ö–æ–¥–∞: {login_response.status_code}")
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏: {response.status_code}")
            
    except requests.exceptions.Timeout:
        print("‚ùå –¢–∞–π–º–∞—É—Ç - —Å–µ—Ä–≤–µ—Ä –µ—â–µ —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–µ—Ç—Å—è")
    except requests.exceptions.ConnectionError:
        print("‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è - —Å–µ—Ä–≤–µ—Ä –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è: {e}")
    
    return False

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    
    print("üöÄ –ê–í–¢–û–ú–ê–¢–ò–ß–ï–°–ö–û–ï –†–ê–ó–í–ï–†–¢–´–í–ê–ù–ò–ï –°–ï–†–í–ï–†–ê –ê–£–¢–ï–ù–¢–ò–§–ò–ö–ê–¶–ò–ò")
    print("=" * 60)
    
    # –®–∞–≥ 1: –°–æ–∑–¥–∞–Ω–∏–µ —Å–µ—Ä–≤–∏—Å–∞ –Ω–∞ Render.com
    render_url = create_render_service()
    
    # –ñ–¥–µ–º –≤–≤–æ–¥–∞ URL –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    print("\n" + "=" * 60)
    print("‚è≥ –û–ñ–ò–î–ê–ù–ò–ï: –°–æ–∑–¥–∞–π—Ç–µ —Å–µ—Ä–≤–∏—Å –Ω–∞ Render.com –ø–æ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –≤—ã—à–µ")
    print("–ü–æ—Å–ª–µ –ø–æ–ª—É—á–µ–Ω–∏—è URL –≤–≤–µ–¥–∏—Ç–µ –µ–≥–æ –Ω–∏–∂–µ:")
    
    while True:
        user_input = input("\nüåê –í–≤–µ–¥–∏—Ç–µ URL –≤–∞—à–µ–≥–æ —Å–µ—Ä–≤–µ—Ä–∞ (–∏–ª–∏ 'skip' –¥–ª—è –ø—Ä–æ–ø—É—Å–∫–∞): ").strip()
        
        if user_input.lower() == 'skip':
            print("‚è≠Ô∏è  –ü—Ä–æ–ø—É—Å–∫–∞–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥–∞")
            break
        elif user_input.startswith('http'):
            render_url = user_input.rstrip('/')  # –£–±–∏—Ä–∞–µ–º trailing slash
            print(f"‚úÖ URL –ø–æ–ª—É—á–µ–Ω: {render_url}")
            break
        else:
            print("‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç URL. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞ –∏–ª–∏ –≤–≤–µ–¥–∏—Ç–µ 'skip'")
    
    if render_url:
        # –®–∞–≥ 2: –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥–∞
        if update_frontend_with_url(render_url):
            # –®–∞–≥ 3: –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ
            print("\n‚è≥ –û–∂–∏–¥–∞–Ω–∏–µ 30 —Å–µ–∫—É–Ω–¥ –¥–ª—è –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏—è...")
            time.sleep(30)
            
            test_deployment(render_url)
            
            # –®–∞–≥ 4: –ó–∞–≥—Ä—É–∑–∫–∞ –Ω–∞ GitHub Pages
            deploy_to_github_pages()
            
            print("\nüéâ –†–ê–ó–í–ï–†–¢–´–í–ê–ù–ò–ï –ó–ê–í–ï–†–®–ï–ù–û!")
            print(f"üåê –í–∞—à —Å–µ—Ä–≤–µ—Ä: {render_url}")
            print("üì± –¢–µ–ø–µ—Ä—å –≤—Ö–æ–¥ —Å –ª—é–±–æ–≥–æ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞ –±—É–¥–µ—Ç —Ä–∞–±–æ—Ç–∞—Ç—å!")
            
        else:
            print("\n‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –æ–±–Ω–æ–≤–∏—Ç—å —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥")
    else:
        print("\n‚ö†Ô∏è  URL –Ω–µ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω. –†–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏–µ –Ω–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ.")

if __name__ == "__main__":
    main() 