#!/usr/bin/env python3
"""
–§–∏–Ω–∞–ª—å–Ω—ã–π –∑–∞–ø—É—Å–∫ Upwork Proposal Generator —Å –ø—É–±–ª–∏—á–Ω—ã–º –¥–æ—Å—Ç—É–ø–æ–º
"""

import subprocess
import time
import threading
import signal
import sys
import os

def print_banner():
    print("=" * 60)
    print("üöÄ UPWORK PROPOSAL GENERATOR - –ü–£–ë–õ–ò–ß–ù–ê–Ø –í–ï–†–°–ò–Ø")
    print("=" * 60)
    print("AI-–ø–æ–º–æ—â–Ω–∏–∫ –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –≤—ã–∏–≥—Ä—ã—à–Ω—ã—Ö –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–π –Ω–∞ Upwork")
    print("üåê –î–æ—Å—Ç—É–ø–µ–Ω –≤–µ–∑–¥–µ | üì± –í—Å–µ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞ | üîí –ó–∞—â–∏—â–µ–Ω")
    print("=" * 60)

def start_backend():
    """–ó–∞–ø—É—Å–∫–∞–µ—Ç backend —Å–µ—Ä–≤–µ—Ä"""
    print("üîß –ó–∞–ø—É—Å–∫ –∑–∞—â–∏—â–µ–Ω–Ω–æ–≥–æ backend —Å–µ—Ä–≤–µ—Ä–∞...")
    
    backend_dir = os.path.join(os.path.dirname(__file__), "backend")
    os.chdir(backend_dir)
    
    # –ê–∫—Ç–∏–≤–∏—Ä—É–µ–º –≤–∏—Ä—Ç—É–∞–ª—å–Ω–æ–µ –æ–∫—Ä—É–∂–µ–Ω–∏–µ –∏ –∑–∞–ø—É—Å–∫–∞–µ–º —Å–µ—Ä–≤–µ—Ä
    cmd = f"source venv/bin/activate && python run.py"
    
    try:
        process = subprocess.Popen(
            cmd,
            shell=True,
            stdout=subprocess.PIPE,
            stderr=subprocess.PIPE,
            text=True
        )
        
        # –ñ–¥–µ–º –Ω–µ–º–Ω–æ–≥–æ –¥–ª—è –∑–∞–ø—É—Å–∫–∞
        time.sleep(3)
        
        if process.poll() is None:
            print("‚úÖ Backend —Å–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω —Å –∑–∞—â–∏—Ç–æ–π!")
            return process
        else:
            print("‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞ backend —Å–µ—Ä–≤–µ—Ä–∞")
            return None
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞ backend: {e}")
        return None

def start_frontend():
    """–ó–∞–ø—É—Å–∫–∞–µ—Ç frontend —Å–µ—Ä–≤–µ—Ä"""
    print("üé® –ó–∞–ø—É—Å–∫ frontend —Å–µ—Ä–≤–µ—Ä–∞...")
    
    frontend_dir = os.path.join(os.path.dirname(__file__), "frontend")
    os.chdir(frontend_dir)
    
    try:
        process = subprocess.Popen(
            [sys.executable, "server.py"],
            stdout=subprocess.PIPE,
            stderr=subprocess.PIPE,
            text=True
        )
        
        # –ñ–¥–µ–º –Ω–µ–º–Ω–æ–≥–æ –¥–ª—è –∑–∞–ø—É—Å–∫–∞
        time.sleep(2)
        
        if process.poll() is None:
            print("‚úÖ Frontend —Å–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω!")
            return process
        else:
            print("‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞ frontend —Å–µ—Ä–≤–µ—Ä–∞")
            return None
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞ frontend: {e}")
        return None

def start_public_proxy():
    """–ó–∞–ø—É—Å–∫–∞–µ—Ç –ø—É–±–ª–∏—á–Ω—ã–π –ø—Ä–æ–∫—Å–∏ —Å–µ—Ä–≤–µ—Ä"""
    print("üåê –ó–∞–ø—É—Å–∫ –ø—É–±–ª–∏—á–Ω–æ–≥–æ –ø—Ä–æ–∫—Å–∏ —Å–µ—Ä–≤–µ—Ä–∞...")
    
    os.chdir(os.path.dirname(__file__))
    
    try:
        # –ó–∞–ø—É—Å–∫–∞–µ–º –Ω–∞ –ø–æ—Ä—Ç—É 8080 –¥–ª—è –ø—É–±–ª–∏—á–Ω–æ–≥–æ –¥–æ—Å—Ç—É–ø–∞
        process = subprocess.Popen(
            [sys.executable, "-m", "http.server", "8080", "--bind", "0.0.0.0"],
            stdout=subprocess.PIPE,
            stderr=subprocess.PIPE,
            text=True
        )
        
        # –ñ–¥–µ–º –Ω–µ–º–Ω–æ–≥–æ –¥–ª—è –∑–∞–ø—É—Å–∫–∞
        time.sleep(2)
        
        if process.poll() is None:
            print("‚úÖ –ü—É–±–ª–∏—á–Ω—ã–π –ø—Ä–æ–∫—Å–∏ —Å–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω!")
            return process
        else:
            print("‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞ –ø—É–±–ª–∏—á–Ω–æ–≥–æ –ø—Ä–æ–∫—Å–∏")
            return None
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞ –ø—É–±–ª–∏—á–Ω–æ–≥–æ –ø—Ä–æ–∫—Å–∏: {e}")
        return None

def main():
    print_banner()
    
    # –ó–∞–ø—É—Å–∫–∞–µ–º backend
    backend_process = start_backend()
    if not backend_process:
        print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–ø—É—Å—Ç–∏—Ç—å backend —Å–µ—Ä–≤–µ—Ä")
        return
    
    # –ó–∞–ø—É—Å–∫–∞–µ–º frontend
    frontend_process = start_frontend()
    if not frontend_process:
        print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–ø—É—Å—Ç–∏—Ç—å frontend —Å–µ—Ä–≤–µ—Ä")
        return
    
    # –ó–∞–ø—É—Å–∫–∞–µ–º –ø—É–±–ª–∏—á–Ω—ã–π –ø—Ä–æ–∫—Å–∏
    proxy_process = start_public_proxy()
    if not proxy_process:
        print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–ø—É—Å—Ç–∏—Ç—å –ø—É–±–ª–∏—á–Ω—ã–π –ø—Ä–æ–∫—Å–∏")
        return
    
    print("\n" + "=" * 60)
    print("üéâ –ü–†–û–ï–ö–¢ –£–°–ü–ï–®–ù–û –ó–ê–ü–£–©–ï–ù –° –ü–£–ë–õ–ò–ß–ù–´–ú –î–û–°–¢–£–ü–û–ú!")
    print("=" * 60)
    print("üåê –û—Å–Ω–æ–≤–Ω–æ–π URL: http://192.168.0.124:3000")
    print("üåç –ü—É–±–ª–∏—á–Ω—ã–π URL: http://192.168.0.124:8080")
    print("üì± –î–æ—Å—Ç—É–ø–µ–Ω –Ω–∞ –≤—Å–µ—Ö —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞—Ö –≤ —Å–µ—Ç–∏")
    print("üîí –ó–∞—â–∏—â–µ–Ω–Ω–æ–µ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω–æ")
    print("=" * 60)
    print("üìö API –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è: http://192.168.0.124:8000/docs")
    print("üîß Backend API: http://192.168.0.124:8000/api/")
    print("=" * 60)
    print("üí° –î–ª—è –¥–æ—Å—Ç—É–ø–∞ –∏–∑ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç–∞ –Ω–∞—Å—Ç—Ä–æ–π—Ç–µ –ø—Ä–æ–±—Ä–æ—Å –ø–æ—Ä—Ç–æ–≤:")
    print("   - –ü–æ—Ä—Ç 3000 (frontend)")
    print("   - –ü–æ—Ä—Ç 8000 (backend)")
    print("   - –ü–æ—Ä—Ç 8080 (–ø—É–±–ª–∏—á–Ω—ã–π –¥–æ—Å—Ç—É–ø)")
    print("=" * 60)
    print("üí° –î–ª—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏ –Ω–∞–∂–º–∏—Ç–µ Ctrl+C")
    print("=" * 60)
    
    # –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å–∏–≥–Ω–∞–ª–æ–≤ –¥–ª—è –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–≥–æ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è
    def signal_handler(sig, frame):
        print("\nüõë –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –≤—Å–µ—Ö —Å–µ—Ä–≤–µ—Ä–æ–≤...")
        for process in [backend_process, frontend_process, proxy_process]:
            if process and process.poll() is None:
                process.terminate()
                process.wait()
        print("‚úÖ –í—Å–µ —Å–µ—Ä–≤–µ—Ä—ã –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã")
        sys.exit(0)
    
    signal.signal(signal.SIGINT, signal_handler)
    
    # –ñ–¥–µ–º –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –ø—Ä–æ—Ü–µ—Å—Å–æ–≤
    try:
        while True:
            time.sleep(1)
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –≤—Å–µ –ø—Ä–æ—Ü–µ—Å—Å—ã –µ—â–µ —Ä–∞–±–æ—Ç–∞—é—Ç
            if (backend_process.poll() is not None or 
                frontend_process.poll() is not None or 
                proxy_process.poll() is not None):
                print("‚ùå –û–¥–∏–Ω –∏–∑ —Å–µ—Ä–≤–µ—Ä–æ–≤ –æ—Å—Ç–∞–Ω–æ–≤–∏–ª—Å—è")
                break
    except KeyboardInterrupt:
        signal_handler(signal.SIGINT, None)

if __name__ == "__main__":
    main() 