#!/usr/bin/env python3
"""
–ù–∞—Å—Ç—Ä–æ–π–∫–∞ HTTPS –∏ –ø—É–±–ª–∏—á–Ω–æ–≥–æ –¥–æ—Å—Ç—É–ø–∞ –¥–ª—è Upwork Proposal Generator
"""

import subprocess
import time
import threading
import signal
import sys
import os
import json
import requests

def print_banner():
    print("=" * 60)
    print("üåê –ù–ê–°–¢–†–û–ô–ö–ê –ü–£–ë–õ–ò–ß–ù–û–ì–û –î–û–°–¢–£–ü–ê –ò HTTPS")
    print("=" * 60)
    print("AI-–ø–æ–º–æ—â–Ω–∏–∫ –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –≤—ã–∏–≥—Ä—ã—à–Ω—ã—Ö –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–π –Ω–∞ Upwork")
    print("üîí HTTPS | üì± –í—Å–µ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞ | üåç –î–æ—Å—Ç—É–ø–µ–Ω –≤–µ–∑–¥–µ")
    print("=" * 60)

def check_ngrok():
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç –Ω–∞–ª–∏—á–∏–µ ngrok"""
    if os.path.exists("./ngrok"):
        print("‚úÖ Ngrok –Ω–∞–π–¥–µ–Ω")
        return True
    else:
        print("‚ùå Ngrok –Ω–µ –Ω–∞–π–¥–µ–Ω")
        return False

def start_servers():
    """–ó–∞–ø—É—Å–∫–∞–µ—Ç —Å–µ—Ä–≤–µ—Ä—ã"""
    print("üîß –ó–∞–ø—É—Å–∫ —Å–µ—Ä–≤–µ—Ä–æ–≤...")
    
    # –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å—Ç–∞—Ä—ã–µ –ø—Ä–æ—Ü–µ—Å—Å—ã
    os.system("pkill -f 'python.*run.py' 2>/dev/null")
    os.system("pkill -f 'python.*server.py' 2>/dev/null")
    os.system("pkill -f ngrok 2>/dev/null")
    
    # –ó–∞–ø—É—Å–∫–∞–µ–º backend
    print("üì° –ó–∞–ø—É—Å–∫ backend —Å–µ—Ä–≤–µ—Ä–∞...")
    backend_cmd = "cd backend && . venv/bin/activate && nohup python run.py > backend.log 2>&1 &"
    subprocess.run(backend_cmd, shell=True)
    
    # –ó–∞–ø—É—Å–∫–∞–µ–º frontend
    print("üé® –ó–∞–ø—É—Å–∫ frontend —Å–µ—Ä–≤–µ—Ä–∞...")
    frontend_cmd = "cd frontend && nohup python3 server.py > frontend.log 2>&1 &"
    subprocess.run(frontend_cmd, shell=True)
    
    # –ñ–¥–µ–º –∑–∞–ø—É—Å–∫–∞
    print("‚è≥ –û–∂–∏–¥–∞–Ω–∏–µ –∑–∞–ø—É—Å–∫–∞ —Å–µ—Ä–≤–µ—Ä–æ–≤...")
    time.sleep(8)
    
    print("‚úÖ –°–µ—Ä–≤–µ—Ä—ã –∑–∞–ø—É—â–µ–Ω—ã!")

def start_ngrok_tunnels():
    """–ó–∞–ø—É—Å–∫–∞–µ—Ç ngrok —Ç—É–Ω–Ω–µ–ª–∏"""
    print("üåê –ó–∞–ø—É—Å–∫ ngrok —Ç—É–Ω–Ω–µ–ª–µ–π...")
    
    # –ó–∞–ø—É—Å–∫–∞–µ–º —Ç—É–Ω–Ω–µ–ª—å –¥–ª—è backend
    print("üì° –°–æ–∑–¥–∞–Ω–∏–µ —Ç—É–Ω–Ω–µ–ª—è –¥–ª—è backend (–ø–æ—Ä—Ç 8000)...")
    backend_tunnel = subprocess.Popen(
        ["./ngrok", "http", "8000", "--log=stdout"],
        stdout=subprocess.PIPE,
        stderr=subprocess.PIPE,
        text=True
    )
    
    # –ó–∞–ø—É—Å–∫–∞–µ–º —Ç—É–Ω–Ω–µ–ª—å –¥–ª—è frontend
    print("üé® –°–æ–∑–¥–∞–Ω–∏–µ —Ç—É–Ω–Ω–µ–ª—è –¥–ª—è frontend (–ø–æ—Ä—Ç 3000)...")
    frontend_tunnel = subprocess.Popen(
        ["./ngrok", "http", "3000", "--log=stdout"],
        stdout=subprocess.PIPE,
        stderr=subprocess.PIPE,
        text=True
    )
    
    # –ñ–¥–µ–º –∑–∞–ø—É—Å–∫–∞ —Ç—É–Ω–Ω–µ–ª–µ–π
    print("‚è≥ –û–∂–∏–¥–∞–Ω–∏–µ –∑–∞–ø—É—Å–∫–∞ —Ç—É–Ω–Ω–µ–ª–µ–π...")
    time.sleep(5)
    
    return backend_tunnel, frontend_tunnel

def get_ngrok_urls():
    """–ü–æ–ª—É—á–∞–µ—Ç –ø—É–±–ª–∏—á–Ω—ã–µ URL –æ—Ç ngrok"""
    print("üîç –ü–æ–ª—É—á–µ–Ω–∏–µ –ø—É–±–ª–∏—á–Ω—ã—Ö URL...")
    
    try:
        # –ü–æ–ª—É—á–∞–µ–º URL –¥–ª—è backend
        response = requests.get("http://localhost:4040/api/tunnels", timeout=5)
        if response.status_code == 200:
            tunnels = response.json()["tunnels"]
            
            backend_url = None
            frontend_url = None
            
            for tunnel in tunnels:
                if tunnel["config"]["addr"] == "http://localhost:8000":
                    backend_url = tunnel["public_url"]
                elif tunnel["config"]["addr"] == "http://localhost:3000":
                    frontend_url = tunnel["public_url"]
            
            return backend_url, frontend_url
    except:
        pass
    
    return None, None

def update_frontend_config(backend_url):
    """–û–±–Ω–æ–≤–ª—è–µ—Ç –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é frontend –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –ø—É–±–ª–∏—á–Ω—ã–º backend"""
    if not backend_url:
        return
    
    print("üîß –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ frontend...")
    
    frontend_js = "frontend/app.js"
    if os.path.exists(frontend_js):
        with open(frontend_js, "r", encoding="utf-8") as f:
            content = f.read()
        
        # –ó–∞–º–µ–Ω—è–µ–º –ª–æ–∫–∞–ª—å–Ω—ã–π URL –Ω–∞ –ø—É–±–ª–∏—á–Ω—ã–π
        content = content.replace("http://192.168.0.124:8000", backend_url)
        content = content.replace("http://localhost:8000", backend_url)
        
        with open(frontend_js, "w", encoding="utf-8") as f:
            f.write(content)
        
        print("‚úÖ –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è frontend –æ–±–Ω–æ–≤–ª–µ–Ω–∞")

def check_servers():
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç —Ä–∞–±–æ—Ç—É —Å–µ—Ä–≤–µ—Ä–æ–≤"""
    print("\nüîç –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–µ—Ä–≤–µ—Ä–æ–≤...")
    
    try:
        response = requests.get("http://localhost:8000/health", timeout=3)
        if response.status_code == 200:
            print("‚úÖ Backend: http://localhost:8000")
        else:
            print("‚ùå Backend –Ω–µ –æ—Ç–≤–µ—á–∞–µ—Ç")
    except:
        print("‚ùå Backend –Ω–µ –æ—Ç–≤–µ—á–∞–µ—Ç")
    
    try:
        response = requests.get("http://localhost:3000", timeout=3)
        if response.status_code == 200:
            print("‚úÖ Frontend: http://localhost:3000")
        else:
            print("‚ùå Frontend –Ω–µ –æ—Ç–≤–µ—á–∞–µ—Ç")
    except:
        print("‚ùå Frontend –Ω–µ –æ—Ç–≤–µ—á–∞–µ—Ç")

def main():
    print_banner()
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º ngrok
    if not check_ngrok():
        print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ ngrok. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ ngrok –¥–ª—è –ø—É–±–ª–∏—á–Ω–æ–≥–æ –¥–æ—Å—Ç—É–ø–∞.")
        return
    
    # –ó–∞–ø—É—Å–∫–∞–µ–º —Å–µ—Ä–≤–µ—Ä—ã
    start_servers()
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–µ—Ä–≤–µ—Ä—ã
    check_servers()
    
    # –ó–∞–ø—É—Å–∫–∞–µ–º —Ç—É–Ω–Ω–µ–ª–∏
    backend_tunnel, frontend_tunnel = start_ngrok_tunnels()
    
    # –ü–æ–ª—É—á–∞–µ–º –ø—É–±–ª–∏—á–Ω—ã–µ URL
    backend_url, frontend_url = get_ngrok_urls()
    
    # –û–±–Ω–æ–≤–ª—è–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é frontend
    update_frontend_config(backend_url)
    
    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã
    print("\n" + "=" * 60)
    print("üéâ –ü–£–ë–õ–ò–ß–ù–´–ô –î–û–°–¢–£–ü –ù–ê–°–¢–†–û–ï–ù!")
    print("=" * 60)
    
    if frontend_url:
        print(f"üåê –ü—É–±–ª–∏—á–Ω—ã–π —Å–∞–π—Ç: {frontend_url}")
        print(f"üîí HTTPS –¥–æ—Å—Ç—É–ø: {frontend_url.replace('http://', 'https://')}")
    else:
        print("‚ö†Ô∏è  –ü—É–±–ª–∏—á–Ω—ã–π URL –Ω–µ –ø–æ–ª—É—á–µ–Ω")
    
    if backend_url:
        print(f"üîß –ü—É–±–ª–∏—á–Ω—ã–π API: {backend_url}")
        print(f"üìö API –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è: {backend_url}/docs")
    else:
        print("‚ö†Ô∏è  –ü—É–±–ª–∏—á–Ω—ã–π API URL –Ω–µ –ø–æ–ª—É—á–µ–Ω")
    
    print("\nüì± –¢–µ–ø–µ—Ä—å —Å–∞–π—Ç –¥–æ—Å—Ç—É–ø–µ–Ω:")
    print("   - –ù–∞ –≤—Å–µ—Ö —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞—Ö")
    print("   - –ò–∑ –ª—é–±–æ–π —Ç–æ—á–∫–∏ –º–∏—Ä–∞")
    print("   - –ü–æ HTTPS (–∑–∞—â–∏—â–µ–Ω–Ω–æ–µ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ)")
    print("   - –ß–µ—Ä–µ–∑ –ª—é–±–æ–π –±—Ä–∞—É–∑–µ—Ä")
    
    print("\nüí° –î–ª—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏: Ctrl+C")
    print("=" * 60)
    
    try:
        # –ñ–¥–µ–º –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è
        while True:
            time.sleep(1)
    except KeyboardInterrupt:
        print("\nüõë –û—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å–µ—Ä–≤–µ—Ä–æ–≤...")
        os.system("pkill -f 'python.*run.py' 2>/dev/null")
        os.system("pkill -f 'python.*server.py' 2>/dev/null")
        os.system("pkill -f ngrok 2>/dev/null")
        print("‚úÖ –°–µ—Ä–≤–µ—Ä—ã –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã!")

if __name__ == "__main__":
    main() 