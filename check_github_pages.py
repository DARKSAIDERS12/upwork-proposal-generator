#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ GitHub Pages
"""

import requests
import time
import subprocess
import sys

def check_github_pages():
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å GitHub Pages"""
    url = "https://darksaiders12.github.io/upwork-proposal-generator/"
    
    print("üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º GitHub Pages...")
    print(f"URL: {url}")
    
    try:
        response = requests.get(url, timeout=10)
        print(f"–°—Ç–∞—Ç—É—Å: {response.status_code}")
        
        if response.status_code == 200:
            print("‚úÖ –°–∞–π—Ç —Ä–∞–±–æ—Ç–∞–µ—Ç!")
            return True
        elif response.status_code == 404:
            print("‚ùå –°–∞–π—Ç –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç 404")
            return False
        else:
            print(f"‚ö†Ô∏è –ù–µ–æ–∂–∏–¥–∞–Ω–Ω—ã–π —Å—Ç–∞—Ç—É—Å: {response.status_code}")
            return False
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ: {e}")
        return False

def check_gh_pages_branch():
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç –≤–µ—Ç–∫—É gh-pages"""
    print("\nüîç –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤–µ—Ç–∫—É gh-pages...")
    
    try:
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–µ–∫—É—â—É—é –≤–µ—Ç–∫—É
        result = subprocess.run(['git', 'branch', '--show-current'], 
                              capture_output=True, text=True)
        current_branch = result.stdout.strip()
        print(f"–¢–µ–∫—É—â–∞—è –≤–µ—Ç–∫–∞: {current_branch}")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ gh-pages
        result = subprocess.run(['git', 'branch', '-a'], 
                              capture_output=True, text=True)
        branches = result.stdout
        print("–î–æ—Å—Ç—É–ø–Ω—ã–µ –≤–µ—Ç–∫–∏:")
        for line in branches.split('\n'):
            if 'gh-pages' in line:
                print(f"  {line.strip()}")
        
        return 'gh-pages' in branches
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ –≤–µ—Ç–æ–∫: {e}")
        return False

def check_files_in_gh_pages():
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç —Ñ–∞–π–ª—ã –≤ –≤–µ—Ç–∫–µ gh-pages"""
    print("\nüîç –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ñ–∞–π–ª—ã –≤ gh-pages...")
    
    try:
        # –ü–µ—Ä–µ–∫–ª—é—á–∞–µ–º—Å—è –Ω–∞ gh-pages
        subprocess.run(['git', 'checkout', 'gh-pages'], check=True)
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ñ–∞–π–ª—ã
        result = subprocess.run(['ls', '-la'], capture_output=True, text=True)
        files = result.stdout
        
        print("–§–∞–π–ª—ã –≤ –≤–µ—Ç–∫–µ gh-pages:")
        for line in files.split('\n'):
            if any(keyword in line for keyword in ['index.html', 'styles.css', 'app.js']):
                print(f"  {line.strip()}")
        
        # –í–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è –Ω–∞ main
        subprocess.run(['git', 'checkout', 'main'], check=True)
        
        return True
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ —Ñ–∞–π–ª–æ–≤: {e}")
        return False

def fix_github_pages():
    """–ò—Å–ø—Ä–∞–≤–ª—è–µ—Ç –ø—Ä–æ–±–ª–µ–º—ã —Å GitHub Pages"""
    print("\nüîß –ò—Å–ø—Ä–∞–≤–ª—è–µ–º GitHub Pages...")
    
    try:
        # –ü–µ—Ä–µ–∫–ª—é—á–∞–µ–º—Å—è –Ω–∞ gh-pages
        subprocess.run(['git', 'checkout', 'gh-pages'], check=True)
        
        # –£–¥–∞–ª—è–µ–º –≤—Å–µ —Ñ–∞–π–ª—ã –∫—Ä–æ–º–µ –Ω—É–∂–Ω—ã—Ö
        subprocess.run(['git', 'rm', '-r', '--cached', '.'], check=True)
        subprocess.run(['git', 'add', 'index.html', 'styles.css', 'app.js'], check=True)
        
        # –ö–æ–º–º–∏—Ç–∏–º –∏–∑–º–µ–Ω–µ–Ω–∏—è
        subprocess.run(['git', 'commit', '-m', 'Clean gh-pages branch'], check=True)
        
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –Ω–∞ GitHub
        subprocess.run(['git', 'push', 'origin', 'gh-pages'], check=True)
        
        # –í–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è –Ω–∞ main
        subprocess.run(['git', 'checkout', 'main'], check=True)
        
        print("‚úÖ GitHub Pages –∏—Å–ø—Ä–∞–≤–ª–µ–Ω!")
        return True
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–∏: {e}")
        return False

def main():
    print("üöÄ –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ GitHub Pages")
    print("=" * 50)
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–µ–∫—É—â–µ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ
    pages_working = check_github_pages()
    gh_pages_exists = check_gh_pages_branch()
    files_ok = check_files_in_gh_pages()
    
    print("\nüìä –†–µ–∑—É–ª—å—Ç–∞—Ç—ã –ø—Ä–æ–≤–µ—Ä–∫–∏:")
    print(f"GitHub Pages —Ä–∞–±–æ—Ç–∞–µ—Ç: {'‚úÖ' if pages_working else '‚ùå'}")
    print(f"–í–µ—Ç–∫–∞ gh-pages —Å—É—â–µ—Å—Ç–≤—É–µ—Ç: {'‚úÖ' if gh_pages_exists else '‚ùå'}")
    print(f"–§–∞–π–ª—ã –≤ –ø–æ—Ä—è–¥–∫–µ: {'‚úÖ' if files_ok else '‚ùå'}")
    
    if not pages_working:
        print("\nüîß –ü—ã—Ç–∞–µ–º—Å—è –∏—Å–ø—Ä–∞–≤–∏—Ç—å...")
        if fix_github_pages():
            print("\n‚è≥ –ñ–¥–µ–º 2 –º–∏–Ω—É—Ç—ã –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è GitHub Pages...")
            time.sleep(120)
            
            if check_github_pages():
                print("üéâ –ü—Ä–æ–±–ª–µ–º–∞ —Ä–µ—à–µ–Ω–∞! –°–∞–π—Ç —Ä–∞–±–æ—Ç–∞–µ—Ç!")
            else:
                print("‚ùå –ü—Ä–æ–±–ª–µ–º–∞ –Ω–µ —Ä–µ—à–µ–Ω–∞. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ GitHub Pages –≤—Ä—É—á–Ω—É—é.")
        else:
            print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –∏—Å–ø—Ä–∞–≤–∏—Ç—å –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏.")
    
    print("\nüìã –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏:")
    print("1. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ GitHub Pages: https://github.com/DARKSAIDERS12/upwork-proposal-generator/settings/pages")
    print("2. –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –∏—Å—Ç–æ—á–Ω–∏–∫ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –Ω–∞ 'Deploy from a branch'")
    print("3. –í–µ—Ç–∫–∞ –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å 'gh-pages'")
    print("4. –ü–∞–ø–∫–∞ –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å '/ (root)'")

if __name__ == "__main__":
    main() 