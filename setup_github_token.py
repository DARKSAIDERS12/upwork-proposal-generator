#!/usr/bin/env python3
"""
–ù–∞—Å—Ç—Ä–æ–π–∫–∞ GitHub —Å —Ç–æ–∫–µ–Ω–æ–º –¥–æ—Å—Ç—É–ø–∞
"""

import subprocess
import os
import getpass

def print_banner():
    print("=" * 60)
    print("üîë –ù–ê–°–¢–†–û–ô–ö–ê GITHUB –¢–û–ö–ï–ù–ê")
    print("=" * 60)
    print("–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ –¥–æ—Å—Ç—É–ø–∞ –∫ GitHub")
    print("=" * 60)

def setup_git_config():
    """–ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ—Ç Git –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é"""
    print("üîß –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Git –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏...")
    
    # –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    subprocess.run(["git", "config", "--global", "user.name", "DARKSAIDERS12"])
    subprocess.run(["git", "config", "--global", "user.email", "darksaiders12@example.com"])
    
    # –ù–∞—Å—Ç—Ä–æ–π–∫–∞ credential helper
    subprocess.run(["git", "config", "--global", "credential.helper", "store"])
    
    print("‚úÖ Git –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∞!")

def setup_remote_repo():
    """–ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ—Ç —É–¥–∞–ª–µ–Ω–Ω—ã–π —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π"""
    print("üîó –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —É–¥–∞–ª–µ–Ω–Ω–æ–≥–æ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è...")
    
    # –£–¥–∞–ª—è–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π remote –µ—Å–ª–∏ –µ—Å—Ç—å
    subprocess.run(["git", "remote", "remove", "origin"], capture_output=True)
    
    # –î–æ–±–∞–≤–ª—è–µ–º –Ω–æ–≤—ã–π remote
    repo_url = "https://github.com/DARKSAIDERS12/upwork-proposal-generator.git"
    subprocess.run(["git", "remote", "add", "origin", repo_url])
    
    print("‚úÖ –£–¥–∞–ª–µ–Ω–Ω—ã–π —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π –Ω–∞—Å—Ç—Ä–æ–µ–Ω!")

def create_token_instructions():
    """–°–æ–∑–¥–∞–µ—Ç –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –¥–ª—è —Ç–æ–∫–µ–Ω–∞"""
    print("\nüìã –ò–ù–°–¢–†–£–ö–¶–ò–ò –î–õ–Ø –°–û–ó–î–ê–ù–ò–Ø –¢–û–ö–ï–ù–ê:")
    print("=" * 60)
    print("1. –ü–µ—Ä–µ–π–¥–∏—Ç–µ –Ω–∞ https://github.com/settings/tokens")
    print("2. –ù–∞–∂–º–∏—Ç–µ 'Generate new token (classic)'")
    print("3. –ù–∞–∑–≤–∞–Ω–∏–µ: 'Upwork Proposal Generator'")
    print("4. –°—Ä–æ–∫ –¥–µ–π—Å—Ç–≤–∏—è: 'No expiration'")
    print("5. –ü—Ä–∞–≤–∞ –¥–æ—Å—Ç—É–ø–∞:")
    print("   ‚úÖ repo (–ø–æ–ª–Ω—ã–π –¥–æ—Å—Ç—É–ø –∫ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è–º)")
    print("   ‚úÖ workflow (–¥–ª—è GitHub Actions)")
    print("6. –ù–∞–∂–º–∏—Ç–µ 'Generate token'")
    print("7. –°–ö–û–ü–ò–†–£–ô–¢–ï –¢–û–ö–ï–ù (–ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç—Å—è —Ç–æ–ª—å–∫–æ –æ–¥–∏–Ω —Ä–∞–∑!)")
    print("=" * 60)

def test_connection():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ GitHub"""
    print("\nüîç –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ GitHub...")
    
    try:
        result = subprocess.run(
            ["git", "ls-remote", "https://github.com/DARKSAIDERS12/upwork-proposal-generator.git"],
            capture_output=True,
            text=True
        )
        
        if result.returncode == 0:
            print("‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ GitHub —É—Å–ø–µ—à–Ω–æ!")
            return True
        else:
            print("‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ GitHub")
            print(f"–û—à–∏–±–∫–∞: {result.stderr}")
            return False
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
        return False

def main():
    print_banner()
    
    print("üåê –≠—Ç–æ—Ç —Å–∫—Ä–∏–ø—Ç –ø–æ–º–æ–∂–µ—Ç –Ω–∞—Å—Ç—Ä–æ–∏—Ç—å –¥–æ—Å—Ç—É–ø –∫ GitHub")
    print("üì± –ü–æ—Å–ª–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –≤—ã —Å–º–æ–∂–µ—Ç–µ –∑–∞–≥—Ä—É–∂–∞—Ç—å –∫–æ–¥ –Ω–∞ GitHub")
    print()
    
    # –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Git
    setup_git_config()
    
    # –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —É–¥–∞–ª–µ–Ω–Ω–æ–≥–æ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è
    setup_remote_repo()
    
    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏
    create_token_instructions()
    
    print("\nüí° –ü–æ—Å–ª–µ —Å–æ–∑–¥–∞–Ω–∏—è —Ç–æ–∫–µ–Ω–∞:")
    print("1. –í—ã–ø–æ–ª–Ω–∏—Ç–µ: git push origin main")
    print("2. –ü—Ä–∏ –∑–∞–ø—Ä–æ—Å–µ –ø–∞—Ä–æ–ª—è –≤–≤–µ–¥–∏—Ç–µ —Ç–æ–∫–µ–Ω (–Ω–µ –ø–∞—Ä–æ–ª—å –æ—Ç –∞–∫–∫–∞—É–Ω—Ç–∞)")
    print("3. –¢–æ–∫–µ–Ω —Å–æ—Ö—Ä–∞–Ω–∏—Ç—Å—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏")
    
    print("\n" + "=" * 60)
    print("üéØ –ì–û–¢–û–í–û –ö –î–ï–ü–õ–û–Æ!")
    print("=" * 60)
    print("üìã –°–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏:")
    print("   1. –°–æ–∑–¥–∞–π—Ç–µ —Ç–æ–∫–µ–Ω –ø–æ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –≤—ã—à–µ")
    print("   2. –í—ã–ø–æ–ª–Ω–∏—Ç–µ: git push origin main")
    print("   3. –í–≤–µ–¥–∏—Ç–µ —Ç–æ–∫–µ–Ω –ø—Ä–∏ –∑–∞–ø—Ä–æ—Å–µ –ø–∞—Ä–æ–ª—è")
    print("=" * 60)

if __name__ == "__main__":
    main() 